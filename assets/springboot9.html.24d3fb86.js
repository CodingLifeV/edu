import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as e,e as t,r as l}from"./app.a3cd44d7.js";const i={},u=t('<h3 id="分布式概述" tabindex="-1"><a class="header-anchor" href="#分布式概述" aria-hidden="true">#</a> 分布式概述</h3><p>分布式系统是由一组通过网络进行通信、为了完成共同的任务而协调工作的计算机节点组成的系统。分布式系统的出现是为了用廉价的、普通的机器完成单个计算机无法完成的计算、存储任务。其目的是<strong>利用更多的机器，处理更多的数据</strong>。</p><p>首先需要明确的是，只有当单个节点的处理能力无法满足日益增长的计算、存储任务的时候，且硬件的提升（加内存、加磁盘、使用更好的<code>CPU</code>）高昂到得不偿失的时候，应用程序也不能进一步优化的时候，我们才需要考虑分布式系统。因为，分布式系统要解决的问题本身就是和单机系统一样的，而由于分布式系统多节点、通过网络通信的拓扑结构，会引入很多单机系统没有的问题，为了解决这些问题又会引入更多的机制、协议，带来更多的问题。</p><p><strong>分布式与集群的区别</strong>：</p><ul><li>分布式：不同的业务模块部署在不同的服务器上或者同一个业务模块分拆多个子业务，部署在不同的服务器上，解决高并发的问题</li><li>集群：同一个业务部署在多台机器上，提高系统可用性</li></ul><h3 id="cap理论" tabindex="-1"><a class="header-anchor" href="#cap理论" aria-hidden="true">#</a> CAP理论</h3><p><strong>概述：</strong></p><p><code>CAP</code>理论是说对于分布式数据存储，最多只能同时满足一致性（<code>C</code>，<code>Consistency</code>）、可用性（<code>A</code>， <code>Availability</code>）、分区容错性（P，<code>Partition Tolerance</code>）中的两者。</p><ul><li>一致性：是指对于每一次读操作，要么都能够读到最新写入的数据，要么错误</li><li>可用性：是指对于每一次请求，都能够得到一个及时的、非错的响应，但是不保证请求的结果是基于最新写入的数据</li><li>分区容错性：是指由于节点之间的网络问题，即使一些消息对包或者延迟，整个系统能继续提供服务（提供一致性或者可用性）</li></ul><p><strong>适用场景：</strong></p><blockquote><p>在分布式系统中，围绕着<code>CAP</code>理论，主要关注点就是复制，一致性，容错性</p></blockquote><ol><li><p>复制：保证数据高可用性</p><p>为了保证系统的高可用和高可靠性，通过复制的方式，让数据在系统中存储多个副本。以服务实例多副本为例，当一个服务发生异常时，客户端就直接调用其他正常的副本。</p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106085408294.png" alt="image-20220106085408294" loading="lazy"></p></li><li><p>一致性</p><p>在数据的复制中，由于存在多个数据副本，就会存在主数据与副本数据一致性的问题。在同一份数据的副本中，一般有一个副本为主副本，其他的备副本。在数据的复制过程中，复制的方式分为两种分别如下：</p><ul><li>强同步复制，数据的写操作需要同步到主副本和所有的备副本，并且全部写入成功后，才返回成功状态。这样，当系统出现异常时，切换到其他任何一个备份副本时，数据是一致的。但是，强同步复制性能不好，而且可用性比较差。如果，在复制过程中，如果某个备份节点出现故障，这时，会阻塞数据的正常写服务。</li><li>异步复制，当数据写入操作成功后，当数据成功复制到主副本时，甚至还没复制时，写操作就返回成功状态。这样，异步复制的性别比较好，但是，当主备出现故障时可能出现数据丢失</li></ul></li><li><p>容错性</p><p>分布式系统中，集群的规模越大发生错误的概率就也大。一般，分布式系统发生异常时，都能够自动容错，保证系统的高可用</p></li></ol><h3 id="rpc" tabindex="-1"><a class="header-anchor" href="#rpc" aria-hidden="true">#</a> RPC</h3><p><code>RPC</code>（<code>Remote Procedure Call</code>）是指远程过程调用，是一种进程间通信方式，他是一种技术的思想，而不是规范。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。即程序员无论是调用本地的还是远程的函数，本质上编写的调用代码基本相同。</p><p>也就是说两台服务器A，B，一个应用部署在A服务器上，想要调用B服务器上应用提供的函数/方法，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据。为什么要用RPC呢？就是无法在一个进程内，甚至一个计算机内通过本地调用的方式完成的需求，比如不同的系统间的通讯，甚至不同的组织间的通讯，由于计算能力需要横向扩展，需要在多台机器组成的集群上部署应用。RPC就是要像调用本地的函数一样去调远程函数。</p><p><strong>RPC基本原理：</strong></p><p>核心模块：通讯，序列化</p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106094701589.png" alt="image-20220106094701589" loading="lazy"></p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106102044853.png" alt="image-20220106102044853" loading="lazy"></p><p>参考文章：</p>',20),d={href:"https://www.jianshu.com/p/2accc2840a1b",target:"_blank",rel:"noopener noreferrer"},r={href:"https://www.jianshu.com/p/b0343bfd216e",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"dubbo概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dubbo概述","aria-hidden":"true"},"#"),s(" Dubbo概述")],-1),k=n("h4",{id:"dubbo产生背景",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dubbo产生背景","aria-hidden":"true"},"#"),s(" Dubbo产生背景")],-1),m=n("code",null,"Dubbo",-1),v={href:"https://dubbo.apache.org/zh/",target:"_blank",rel:"noopener noreferrer"},b=t('<p>互联网的发展过程中，随着流量的增大，常规的垂直应用架构已无法应对应用场景，架构就发生了演变：</p><ul><li>单一的应用架构：网站流量很小，只需一个应用，将所有功能都部署在一起</li><li>应用和数据库单独部署</li><li>应用和数据库集群部署</li><li>数据库压力变大，读写分离</li><li>使用缓存技术加快速度</li><li>数据库分库分表</li><li>应用分为不同的类型拆分</li></ul><p>当应用架构发展到此阶段时，应用与应用之间的关系会变得十分复杂，随之出现以下几个问题：</p><ul><li>当服务越来越多时，服务 <code>URL</code> 配置管理变得非常困难，<code>F5</code> 硬件负载均衡器的单点压力也越来越大</li><li>当进一步发展，服务间依赖关系变得错踪复杂，甚至分不清哪个应用要在哪个应用之前启动，架构师都不能完整的描述应用的架构关系</li><li>接着，服务的调用量越来越大，服务的容量问题就暴露出来，这个服务需要多少机器支撑？什么时候该加机器？</li></ul><p>为了解决上述由于架构的演变所产生的问题几个问题，于是，<code>Dubbo</code> 随之产生。</p><h4 id="dubbo技术架构" tabindex="-1"><a class="header-anchor" href="#dubbo技术架构" aria-hidden="true">#</a> Dubbo技术架构</h4><p><code>Dubbo</code>服务架构如下图所示：</p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106091629679.png" alt="image-20220106091629679" loading="lazy"></p><p><strong>节点角色说明:</strong></p><table><thead><tr><th style="text-align:left;">节点</th><th style="text-align:left;">角色说明</th></tr></thead><tbody><tr><td style="text-align:left;">Provider</td><td style="text-align:left;"><strong>暴露服务的服务提供方</strong>，服务提供者在启动时，向注册中心注册自己提供的服务</td></tr><tr><td style="text-align:left;">Consumer</td><td style="text-align:left;"><strong>调用远程服务的服务消费方</strong>，服务消费者在启动时，向注册中心订阅自己所需的服务，服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用</td></tr><tr><td style="text-align:left;">Registry</td><td style="text-align:left;"><strong>服务注册与发现的注册中心</strong>，注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者</td></tr><tr><td style="text-align:left;">Monitor</td><td style="text-align:left;">统计服务的调用次数和调用时间的监控中心</td></tr><tr><td style="text-align:left;">Container</td><td style="text-align:left;">服务运行容器</td></tr></tbody></table><p>类似<strong>生产者-消费者</strong>模型，在这种模型上，加上了<strong>注册中心和监控中心</strong>，用于管理提供方提供的<code>URL</code>，以及管理整个过程，<strong>流程如下</strong>：</p><ul><li>启动容器，加载，运行服务提供者</li><li>服务提供者在启动时，在注册中心<strong>发布注册</strong>自己提供的服务</li><li>服务消费者在启动时，在注册中心<strong>订阅</strong>自己所需的服务</li><li>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者</li><li>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用</li><li>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心</li></ul><p><strong><code>Zookeeper</code>是<code>Dubbo</code>推荐的注册中心</strong></p><h3 id="zookeeper下载与安装" tabindex="-1"><a class="header-anchor" href="#zookeeper下载与安装" aria-hidden="true">#</a> Zookeeper下载与安装</h3><p><code>Zookeeper</code>是<code>Dubbo</code>推荐的注册中心，<code>Windows</code>下安装流程如下：</p>',15),h={href:"https://zookeeper.apache.org/releases.html",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"bin.tar.gz",-1),f=n("li",null,[n("p",null,[s("进入解压目录conf文件夹，复制"),n("code",null,"zoo_sample.cfg"),s("副本并重新命名为"),n("code",null,"zoo.cfg")]),n("p",null,[n("img",{src:"https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106145208296.png",alt:"image-20220106145208296",loading:"lazy"})])],-1),_=n("li",null,[n("p",null,[s("以管理员身份运行"),n("code",null,"/bin/zkServer.cmd")])],-1),x=t(`<blockquote><p>初次运行可能报错，在/bin文件夹下打开<code>zkServer.cmd</code>末尾添加<code>pause</code>启动，观察报错原因并处理</p></blockquote><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106145535342.png" alt="image-20220106145535342" loading="lazy"></p><blockquote><p>添加<code>pause</code>指令仍然闪退，可能由于<code>JDK</code>版本过低，建议下载低版本<code>Zookeeper</code>，实测JDK1.8 <code>Zookeeper 3.5.9</code>可用</p></blockquote><ol start="4"><li><p>修改<code>zoo.cfg</code>配置文件</p><p><code>zookeeper 3.5</code>之后有个内嵌的管理控制台是通过<code>Jetty</code>启动，会占用 8080 端口，需要修改配置文件：</p><div class="language-apl line-numbers-mode" data-ext="apl"><pre class="language-apl"><code>admin<span class="token dyadic-operator operator">.</span>serverPort<span class="token function">=</span><span class="token number">8888</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220105113449621.png" alt="image-20220105113449621" loading="lazy"><code>zoo.cfg</code>配置文件分析：</p><div class="language-apl line-numbers-mode" data-ext="apl"><pre class="language-apl"><code>tickTime<span class="token function">=</span><span class="token number">2000</span>  <span class="token comment"># Zookeeper 中最小的时间单位长度(ms)</span>

initLimit<span class="token function">=</span><span class="token number">10</span>  <span class="token comment"># follower 节点启动后与 leader 节点完成数据同步的时间</span>

syncLimit<span class="token function">=</span><span class="token number">5</span> <span class="token comment"># leader 节点和 follower 节点进行心跳检测的最大延时时间</span>

dataDir<span class="token function">=</span><span class="token monadic-operator operator">/</span>tmp<span class="token monadic-operator operator">/</span>zookeeper  <span class="token comment"># 表示 Zookeeper 服务器存储快照文件的目录</span>

dataLogDir <span class="token comment"># 表示配置 Zookeeper事务日志的存储路径, 默认指定在 dataDir 目录下 </span>

clientPort <span class="token comment"># 表示客户端和服务端建立连接的端口号： 2181</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220105102005854.png" alt="image-20220105102005854" loading="lazy"></p></li><li><p>启动cli.cmd测试</p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220105101911556.png" alt="image-20220105101911556" loading="lazy"></p></li></ol><h3 id="安装dubbo-admin" tabindex="-1"><a class="header-anchor" href="#安装dubbo-admin" aria-hidden="true">#</a> 安装dubbo-admin</h3><p><code>dubbo-admin</code>是<code>Dubbo RPC</code>框架的管理端，可以对注册的服务(<code>provider</code>)和服务调用方(<code>comsumer</code>)进行服务治理，包括路由、监控、配置等功能，<strong>可以对注册到<code>zookeeper</code>注册中心的服务或服务消费者进行管理</strong>。安装流程如下：</p>`,6),j=n("code",null,"dubbo-admin",-1),z={href:"https://github.com/apache/dubbo-admin/tree/master",target:"_blank",rel:"noopener noreferrer"},S=n("blockquote",null,[n("p",null,[s("旧版本下载"),n("code",null,"git"),s("命令： "),n("code",null,"git clone -b master.0.2.0 https://github.com/apache/dubbo-admin.git")])],-1),w=t(`<li><p>修改 <code>dubbo-admin\\src\\main\\resources \\application.properties</code> 指定<code>Zookeeper</code>地址</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">7001</span>
<span class="token key attr-name">spring.velocity.cache</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">spring.velocity.charset</span><span class="token punctuation">=</span><span class="token value attr-value">UTF-8</span>
<span class="token key attr-name">spring.velocity.layout-url</span><span class="token punctuation">=</span><span class="token value attr-value">/templates/default.vm</span>
<span class="token key attr-name">spring.messages.fallback-to-system-locale</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">spring.messages.basename</span><span class="token punctuation">=</span><span class="token value attr-value">i18n/message</span>
<span class="token key attr-name">spring.root.password</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">spring.guest.password</span><span class="token punctuation">=</span><span class="token value attr-value">guest</span>

<span class="token key attr-name">dubbo.registry.address</span><span class="token punctuation">=</span><span class="token value attr-value">zookeeper://127.0.0.1:2181</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106152516905.png" alt="image-20220106152516905" loading="lazy"></p><blockquote><p>旧版本<code>dubbo-admin</code>启动端口号为7001，新版本为8080，新版本同时需要修改启动端口号</p></blockquote></li><li><p>在项目目录下窗口打包<code>dubbo-admin</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mvn clean package -Dmaven.test.skip=true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106153130974.png" alt="image-20220106153130974" loading="lazy"></p></li><li><p>打开<code>Zookeeper</code>服务，执行<code>dubbo-admin\\target</code> 下的<code>dubbo-admin-0.0.1-SNAPSHOT.jar</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -jar dubbo-admin-0.0.1-SNAPSHOT.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,3),I={href:"http://localhost:7001/",target:"_blank",rel:"noopener noreferrer"},T=n("p",null,[n("img",{src:"https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106153509959.png",alt:"image-20220106153509959",loading:"lazy"})],-1),D=t(`<h3 id="springboot整合dubbo-zookeeper" tabindex="-1"><a class="header-anchor" href="#springboot整合dubbo-zookeeper" aria-hidden="true">#</a> SpringBoot整合Dubbo+Zookeeper</h3><p><code>SpringBoot</code>整合<code>Dubbo</code>+<code>Zookeeper</code>流程如下：</p><ol><li><p><code>idea</code>创建一个空项目<code>dubbo-zookeeper</code>，空项目中分别创建两个<code>Mudules</code> -<code>Springboot</code>应用：<code>provider-server</code>、<code>consumer-server</code>：</p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106153838158.png" alt="image-20220106153838158" loading="lazy"></p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220106154117713.png" alt="image-20220106154117713" loading="lazy"></p></li><li><p>编写服务提供者代码并测试，移步<a href="#_link_2nd">服务提供者</a></p></li><li><p>编写服务消费者代码并测试，移步<a href="#_link_3rd">服务消费者</a></p></li></ol><h4 id="服务提供者" tabindex="-1"><a class="header-anchor" href="#服务提供者" aria-hidden="true">#</a> <a id="_link_2nd">服务提供者</a></h4><p><strong>将服务提供者注册到注册中心，需要整合Dubbo和Zookeeper包</strong>，服务提供者代码实现如下（举例卖票服务）：</p><ol><li><p>编写接口及其实现类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TicketService</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Component</span>  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TicketServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">TicketService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;服务商提供卖票服务&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>导入相关依赖包：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- Dubbo整合SpringBoot依赖包 dubbo-springboot--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.7.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- Zookeeper服务端依赖包 zkclient--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.sgroschupf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zkclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 引入新版Zookeeper依赖包时, 需要解决日志冲突, 剔除日志依赖 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>curator-recipes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--排除这个slf4j-log4j12--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-log4j12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置文件<code>application.properties</code>中配置<code>Dubbo</code>相关属性</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># SpringBoot 启动端口</span>
<span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">8081</span>

<span class="token comment"># 当前应用名字</span>
<span class="token key attr-name">dubbo.application.name</span><span class="token punctuation">=</span><span class="token value attr-value">provider-server</span>
<span class="token comment"># 注册中心地址</span>
<span class="token key attr-name">dubbo.registry.address</span><span class="token punctuation">=</span><span class="token value attr-value">zookeeper://127.0.0.1:2181</span>
<span class="token comment"># 扫描指定包下服务</span>
<span class="token key attr-name">dubbo.scan.base-packages</span><span class="token punctuation">=</span><span class="token value attr-value">com.wyj.service</span>

<span class="token comment"># dubbo 默认端口是20880,设置端口为-1表示 Dubbo 自动扫描并使用可用端口(从20880开始递增),避免端口冲突的问题</span>
<span class="token key attr-name">dubbo.protocol.port</span><span class="token punctuation">=</span><span class="token value attr-value">-1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>对服务实现类<code>TicketServiceImpl</code>配置服务注解<code>@Service</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>    <span class="token comment">// 被注解的类可以被扫描到, 在项目一启动就自动注册到注册中心</span>
<span class="token annotation punctuation">@Component</span>  <span class="token comment">// 使用 Dubbo 后尽量不要用 Service 注解</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TicketServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">TicketService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;服务商提供卖票服务&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>@Service</code> 是<code>org.apache.dubbo.config.annotation.Service</code>下的注解，启动应用，<strong>Dubbo就会扫描指定的包下带有@Service注解的服务，将它发布在指定的注册中心中</strong></p></blockquote></li><li><p>启动测试，在<code>dubbo-admin</code>控制台下观察注册信息：</p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220107093712151.png" alt="image-20220107093712151" loading="lazy"></p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220107093754881.png" alt="image-20220107093754881" loading="lazy"></p></li></ol><h4 id="服务消费者" tabindex="-1"><a class="header-anchor" href="#服务消费者" aria-hidden="true">#</a> <a id="_link_3rd">服务消费者</a></h4><p>启动服务消费者应用，需要去注册中心订阅服务，代码如下：</p><ol><li><p>导入相关依赖，和服务提供者<code>provider-server</code>模块依赖包一样</p></li><li><p>配置文件<code>application.properties</code>中配置<code>Dubbo</code>相关属性</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># SpringBoot 启动端口</span>
<span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">8082</span>

<span class="token comment"># 当前应用名</span>
<span class="token key attr-name">dubbo.application.name</span><span class="token punctuation">=</span><span class="token value attr-value">consumer-server</span>
<span class="token comment"># 注册中心地址</span>
<span class="token key attr-name">dubbo.registry.address</span><span class="token punctuation">=</span><span class="token value attr-value">zookeeper://127.0.0.1:2181</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将需要订阅的服务的接口<code>TicketService</code>拿过来，要求路径、名字和服务提供者定义的一样</p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220107111413396.png" alt="image-20220107111413396" loading="lazy"></p><blockquote><p>如果不使用<code>Dubbo</code>+<code>Zookeeper</code>，实现以上功能需要将服务提供者的接口打包，然后用<code>pom</code>文件导入，这里只需要通过注册中心把服务提供者的接口拿过来</p></blockquote></li><li><p>编写消费者代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 订阅注册中心的服务, 使用买票的服务</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>

    <span class="token comment">// 想拿到 provider-server 提供票的服务 getTicket(), 要去注册中心拿到服务</span>
    <span class="token comment">// 使用 @Reference 注解订阅注册中心的服务</span>
    <span class="token annotation punctuation">@Reference</span>
    <span class="token class-name">TicketService</span> ticket<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">buyTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> tic <span class="token operator">=</span> ticket<span class="token punctuation">.</span><span class="token function">getTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;到注册中心&quot;</span> <span class="token operator">+</span> tic<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>@Service</code> 是<code>org.springframework.stereotype.Service</code>下的注解</p></blockquote></li><li><p>启动服务提供者<code>Module</code></p></li><li><p>编写服务消费者测试代码，启动服务消费者<code>Module</code>，测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">ConsumerServerApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        userService<span class="token punctuation">.</span><span class="token function">buyTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220108125858662.png" align="left" alt="image-20220108125858662" style="zoom:70%;"><p>启动<code>dubbo-admin</code>观察情况：</p><p><img src="https://eduimage1.oss-cn-beijing.aliyuncs.com/img/springboot/image-20220108131207319.png" alt="image-20220108131207319" loading="lazy"></p></li></ol><h2 id="常见springboot项目错误" tabindex="-1"><a class="header-anchor" href="#常见springboot项目错误" aria-hidden="true">#</a> 常见SpringBoot项目错误</h2><h3 id="maven打包异常" tabindex="-1"><a class="header-anchor" href="#maven打包异常" aria-hidden="true">#</a> maven打包异常</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>pom</code>文件指定<code>skipTests</code>为<code>true</code>，跳过单测：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.22.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skipTests</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skipTests</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-resources-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function q(C,P){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",d,[s("https://www.jianshu.com/p/2accc2840a1b"),e(a)])]),n("p",null,[n("a",r,[s("https://www.jianshu.com/p/b0343bfd216e"),e(a)])]),g,k,n("p",null,[m,s("官方文档："),n("a",v,[s("https://dubbo.apache.org/zh/"),e(a)])]),b,n("ol",null,[n("li",null,[n("p",null,[s("官网："),n("a",h,[s("https://zookeeper.apache.org/releases.html"),e(a)]),s("下载"),y,s("压缩包解压，经过编译的可以直接解压使用")])]),f,_]),x,n("ol",null,[n("li",null,[n("p",null,[s("下载解压，"),j,s("安装地址："),n("a",z,[s("https://github.com/apache/dubbo-admin/tree/master"),e(a)])]),S]),w,n("li",null,[n("p",null,[s("测试，访问"),n("a",I,[s("http://localhost:7001/"),e(a)]),s("，输入登录账户和密码，默认都为root")]),T])]),D])}const R=p(i,[["render",q],["__file","springboot9.html.vue"]]);export{R as default};
